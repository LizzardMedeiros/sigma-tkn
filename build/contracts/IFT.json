{
  "contractName": "IFT",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenOwner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferAnyERC20Token",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/IFT.sol\":\"IFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/ERC20.sol\":{\"keccak256\":\"0xf42fab6daa157543b94533d49ed96269ba1e2a23073f6cd4189daacfaf1d2ad9\",\"urls\":[\"bzz-raw://d2e454386219b12f0fffc2822b9b8c3ea6fc53556d2bb720ea2f765cbf07b748\",\"dweb:/ipfs/QmVXqh4pkMc9BW23CEptsB6yZt5CHR6dX1RTmBne7Cc35c\"]},\"/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/ERC20Interface.sol\":{\"keccak256\":\"0x2463d4c10537b1daf22d91dc2832b5dcb6180d2aae14e21d14f68dc926d85b35\",\"urls\":[\"bzz-raw://50bc4d358fac26cc9f7b5119dc63ac274d1e254b53ade9bc1a52514dd91a85f6\",\"dweb:/ipfs/QmYVdJ6wTd8hyLbbNwqhSBrPcFg5njy6LAtCvUWm4Pgqki\"]},\"/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/IFT.sol\":{\"keccak256\":\"0x0e2371fe6e5ef485a3cdd836141c0f96fce951aa61fc9bdc3ddfff8eb3623b16\",\"urls\":[\"bzz-raw://66d4f38ee2a609f2799c7e418b214a67642fb89f381b38f5a4138b9b136119bc\",\"dweb:/ipfs/QmW1Q8LdGcvspKmCtErH71NqcdXgkq5ww2vfZDVEQXWcTm\"]},\"/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/Owned.sol\":{\"keccak256\":\"0x4c3c14913df537070d033812bccfba8db9c255de80f042098800bfe14470be5b\",\"urls\":[\"bzz-raw://25d131c596963df4ae7ad98284b4ce2a51010964c4fceebd3c7a5f71387bb113\",\"dweb:/ipfs/QmYm9gwwoACZtrEJSbFVcKMhkmBC3EsYAC6wXGpEYj8Xi1\"]},\"/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/SafeMath.sol\":{\"keccak256\":\"0x5e877ce6dda2efd1f5504f5b5fff9f587993d68df4e7cb45012a9740536b5d50\",\"urls\":[\"bzz-raw://1f4b88547d2ac558ebdb8f23cfec792c5277df4210268de5c0ea2159422e5ba2\",\"dweb:/ipfs/Qmf1wi3L8FR8MVuDUmanFphxHvGz5Nr1fEEaUhrNCxcndF\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50600080546001600160a01b0319163317905560408051808201909152600580825264119256115160da1b60209092019182526200005291600291620001d6565b5060408051808201909152601a8082527f4578616d706c6520466978656420537570706c7920546f6b656e00000000000060209092019182526200009991600391620001d6565b5060048054601260ff19909116179081905560ff16600a0a620f4240026005819055600080546001600160a01b03908116825260066020908152604080842085905583548151958652905192169360008051602062000df6833981519152929081900390910190a36040805180820190915260038082526212519560ea1b60209092019182526200012d91600291620001d6565b506040805180820190915260118082527024b73b32b9ba10233ab732102a37b5b2b760791b60209092019182526200016891600391620001d6565b5060048054601260ff19909116179081905560ff16600a0a620f4240026005819055600080546001600160a01b03908116825260066020908152604080842085905583548151958652905192169360008051602062000df6833981519152929081900390910190a36200027b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200021957805160ff191683800117855562000249565b8280016001018555821562000249579182015b82811115620002495782518255916020019190600101906200022c565b50620002579291506200025b565b5090565b6200027891905b8082111562000257576000815560010162000262565b90565b610b6b806200028b6000396000f3fe6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063d4ee1d9011610059578063d4ee1d901461040a578063dc39d06d1461041f578063dd62ed3e14610458578063f2fde38b14610493576100f3565b80638da5cb5b146102c357806395d89b41146102f4578063a9059cbb14610309578063cae9ca5114610342576100f3565b8063313ce567116100c6578063313ce567146102395780633eaaf86b1461026457806370a082311461027957806379ba5097146102ac576100f3565b806306fdde03146100f8578063095ea7b31461018257806318160ddd146101cf57806323b872dd146101f6575b600080fd5b34801561010457600080fd5b5061010d6104c6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018e57600080fd5b506101bb600480360360408110156101a557600080fd5b506001600160a01b038135169060200135610554565b604080519115158252519081900360200190f35b3480156101db57600080fd5b506101e46105bb565b60408051918252519081900360200190f35b34801561020257600080fd5b506101bb6004803603606081101561021957600080fd5b506001600160a01b038135811691602081013590911690604001356105ed565b34801561024557600080fd5b5061024e6106f8565b6040805160ff9092168252519081900360200190f35b34801561027057600080fd5b506101e4610701565b34801561028557600080fd5b506101e46004803603602081101561029c57600080fd5b50356001600160a01b0316610707565b3480156102b857600080fd5b506102c1610722565b005b3480156102cf57600080fd5b506102d861079d565b604080516001600160a01b039092168252519081900360200190f35b34801561030057600080fd5b5061010d6107ac565b34801561031557600080fd5b506101bb6004803603604081101561032c57600080fd5b506001600160a01b038135169060200135610804565b34801561034e57600080fd5b506101bb6004803603606081101561036557600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460018302840111640100000000831117156103c957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108b4945050505050565b34801561041657600080fd5b506102d86109fc565b34801561042b57600080fd5b506101bb6004803603604081101561044257600080fd5b506001600160a01b038135169060200135610a0b565b34801561046457600080fd5b506101e46004803603604081101561047b57600080fd5b506001600160a01b0381358116916020013516610aad565b34801561049f57600080fd5b506102c1600480360360208110156104b657600080fd5b50356001600160a01b0316610ad8565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561054c5780601f106105215761010080835404028352916020019161054c565b820191906000526020600020905b81548152906001019060200180831161052f57829003601f168201915b505050505081565b3360008181526007602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b6000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8546005540390565b6001600160a01b038316600090815260066020526040812054610616908363ffffffff610b1116565b6001600160a01b0385166000908152600660209081526040808320939093556007815282822033835290522054610653908363ffffffff610b1116565b6001600160a01b038086166000908152600760209081526040808320338452825280832094909455918616815260069091522054610697908363ffffffff610b2616565b6001600160a01b0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60045460ff1681565b60055481565b6001600160a01b031660009081526006602052604090205490565b6001546001600160a01b0316331461073957600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031681565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561054c5780601f106105215761010080835404028352916020019161054c565b33600090815260066020526040812054610824908363ffffffff610b1116565b33600090815260066020526040808220929092556001600160a01b03851681522054610856908363ffffffff610b2616565b6001600160a01b0384166000818152600660209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b3360008181526007602090815260408083206001600160a01b038816808552908352818420879055815187815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b8381101561098b578181015183820152602001610973565b50505050905090810190601f1680156109b85780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156109da57600080fd5b505af11580156109ee573d6000803e3d6000fd5b506001979650505050505050565b6001546001600160a01b031681565b600080546001600160a01b03163314610a2357600080fd5b600080546040805163a9059cbb60e01b81526001600160a01b0392831660048201526024810186905290519186169263a9059cbb926044808401936020939083900390910190829087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b505050506040513d6020811015610aa457600080fd5b50519392505050565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b6000546001600160a01b03163314610aef57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600082821115610b2057600080fd5b50900390565b818101828110156105b557600080fdfea265627a7a72315820c8f569574ee4a4ce7a85ba04f647055bb236388163841ae292a32914f8ec902964736f6c63430005100032ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80638da5cb5b1161008a578063d4ee1d9011610059578063d4ee1d901461040a578063dc39d06d1461041f578063dd62ed3e14610458578063f2fde38b14610493576100f3565b80638da5cb5b146102c357806395d89b41146102f4578063a9059cbb14610309578063cae9ca5114610342576100f3565b8063313ce567116100c6578063313ce567146102395780633eaaf86b1461026457806370a082311461027957806379ba5097146102ac576100f3565b806306fdde03146100f8578063095ea7b31461018257806318160ddd146101cf57806323b872dd146101f6575b600080fd5b34801561010457600080fd5b5061010d6104c6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014757818101518382015260200161012f565b50505050905090810190601f1680156101745780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018e57600080fd5b506101bb600480360360408110156101a557600080fd5b506001600160a01b038135169060200135610554565b604080519115158252519081900360200190f35b3480156101db57600080fd5b506101e46105bb565b60408051918252519081900360200190f35b34801561020257600080fd5b506101bb6004803603606081101561021957600080fd5b506001600160a01b038135811691602081013590911690604001356105ed565b34801561024557600080fd5b5061024e6106f8565b6040805160ff9092168252519081900360200190f35b34801561027057600080fd5b506101e4610701565b34801561028557600080fd5b506101e46004803603602081101561029c57600080fd5b50356001600160a01b0316610707565b3480156102b857600080fd5b506102c1610722565b005b3480156102cf57600080fd5b506102d861079d565b604080516001600160a01b039092168252519081900360200190f35b34801561030057600080fd5b5061010d6107ac565b34801561031557600080fd5b506101bb6004803603604081101561032c57600080fd5b506001600160a01b038135169060200135610804565b34801561034e57600080fd5b506101bb6004803603606081101561036557600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561039557600080fd5b8201836020820111156103a757600080fd5b803590602001918460018302840111640100000000831117156103c957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506108b4945050505050565b34801561041657600080fd5b506102d86109fc565b34801561042b57600080fd5b506101bb6004803603604081101561044257600080fd5b506001600160a01b038135169060200135610a0b565b34801561046457600080fd5b506101e46004803603604081101561047b57600080fd5b506001600160a01b0381358116916020013516610aad565b34801561049f57600080fd5b506102c1600480360360208110156104b657600080fd5b50356001600160a01b0316610ad8565b6003805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561054c5780601f106105215761010080835404028352916020019161054c565b820191906000526020600020905b81548152906001019060200180831161052f57829003601f168201915b505050505081565b3360008181526007602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a35060015b92915050565b6000805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8546005540390565b6001600160a01b038316600090815260066020526040812054610616908363ffffffff610b1116565b6001600160a01b0385166000908152600660209081526040808320939093556007815282822033835290522054610653908363ffffffff610b1116565b6001600160a01b038086166000908152600760209081526040808320338452825280832094909455918616815260069091522054610697908363ffffffff610b2616565b6001600160a01b0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60045460ff1681565b60055481565b6001600160a01b031660009081526006602052604090205490565b6001546001600160a01b0316331461073957600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031681565b6002805460408051602060018416156101000260001901909316849004601f8101849004840282018401909252818152929183018282801561054c5780601f106105215761010080835404028352916020019161054c565b33600090815260066020526040812054610824908363ffffffff610b1116565b33600090815260066020526040808220929092556001600160a01b03851681522054610856908363ffffffff610b2616565b6001600160a01b0384166000818152600660209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b3360008181526007602090815260408083206001600160a01b038816808552908352818420879055815187815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b8381101561098b578181015183820152602001610973565b50505050905090810190601f1680156109b85780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156109da57600080fd5b505af11580156109ee573d6000803e3d6000fd5b506001979650505050505050565b6001546001600160a01b031681565b600080546001600160a01b03163314610a2357600080fd5b600080546040805163a9059cbb60e01b81526001600160a01b0392831660048201526024810186905290519186169263a9059cbb926044808401936020939083900390910190829087803b158015610a7a57600080fd5b505af1158015610a8e573d6000803e3d6000fd5b505050506040513d6020811015610aa457600080fd5b50519392505050565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b6000546001600160a01b03163314610aef57600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600082821115610b2057600080fd5b50900390565b818101828110156105b557600080fdfea265627a7a72315820c8f569574ee4a4ce7a85ba04f647055bb236388163841ae292a32914f8ec902964736f6c63430005100032",
  "sourceMap": "252:510:2:-;;;494:265;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;399:5:4;:18;;-1:-1:-1;;;;;;399:18:4;407:10;399:18;;;1278:16:0;;;;;;;;;;;;;-1:-1:-1;;;1278:16:0;;;;;;;;;:6;;:16;:::i;:::-;-1:-1:-1;1304:35:0;;;;;;;;;;;;;;;;;;;;;;;:4;;:35;:::i;:::-;-1:-1:-1;1349:8:0;:13;;1360:2;-1:-1:-1;;1349:13:0;;;;;;;;;1406:8;1397:2;:18;1387:7;:28;1372:12;:43;;;-1:-1:-1;1434:5:0;;-1:-1:-1;;;;;1434:5:0;;;1425:15;;:8;:15;;;;;;;;:30;;;1491:5;;1470:41;;;;;;;1491:5;;;-1:-1:-1;;;;;;;;;;;1470:41:0;;;;;;;;;;524:14:2;;;;;;;;;;;;;-1:-1:-1;;;524:14:2;;;;;;;;;:6;;:14;:::i;:::-;-1:-1:-1;547:26:2;;;;;;;;;;;;;-1:-1:-1;;;547:26:2;;;;;;;;;:4;;:26;:::i;:::-;-1:-1:-1;582:8:2;:13;;593:2;-1:-1:-1;;582:13:2;;;;;;;;;638:8;629:2;:18;619:7;:28;604:12;:43;;;-1:-1:-1;677:5:2;;-1:-1:-1;;;;;677:5:2;;;668:15;;:8;:15;;;;;;;;:30;;;733:5;;712:41;;;;;;;733:5;;;-1:-1:-1;;;;;;;;;;;712:41:2;;;;;;;;;;252:510;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;252:510:2;;;-1:-1:-1;252:510:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "252:510:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5684:8:0;;;887:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;887:18:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;887:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3264:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3264:204:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3264:204:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1705:109;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1705:109:0;;;:::i;:::-;;;;;;;;;;;;;;;;4000:337;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4000:337:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4000:337:0;;;;;;;;;;;;;;;;;:::i;911:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;911:21:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;938:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;938:24:0;;;:::i;2035:118::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2035:118:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2035:118:0;-1:-1:-1;;;;;2035:118:0;;:::i;609:186:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;609:186:4;;;:::i;:::-;;237:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;237:20:4;;;:::i;:::-;;;;-1:-1:-1;;;;;237:20:4;;;;;;;;;;;;;;861::0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;861:20:0;;;:::i;2496:262::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2496:262:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2496:262:0;;;;;;;;:::i;5123:331::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5123:331:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;5123:331:0;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;5123:331:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5123:331:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5123:331:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;5123:331:0;;-1:-1:-1;5123:331:0;;-1:-1:-1;;;;;5123:331:0:i;262:23:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:23:4;;;:::i;5931:182:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5931:182:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5931:182:0;;;;;;;;:::i;4618:145::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4618:145:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4618:145:0;;;;;;;;;;:::i;507:98:4:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;507:98:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;507:98:4;-1:-1:-1;;;;;507:98:4;;:::i;887:18:0:-;;;;;;;;;;;;;;;-1:-1:-1;;887:18:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3264:204::-;3359:10;3327:12;3351:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3351:28:0;;;;;;;;;;;:37;;;3403;;;;;;;3327:12;;3351:28;;3359:10;;3403:37;;;;;;;;-1:-1:-1;3457:4:0;3264:204;;;;;:::o;1705:109::-;1749:4;1787:20;;:8;:20;;;;1772:12;;:35;1705:109;:::o;4000:337::-;-1:-1:-1;;;;;4118:14:0;;4077:12;4118:14;;;:8;:14;;;;;;:26;;4137:6;4118:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;4101:14:0;;;;;;:8;:14;;;;;;;;:43;;;;4182:7;:13;;;;;4196:10;4182:25;;;;;;:37;;4212:6;4182:37;:29;:37;:::i;:::-;-1:-1:-1;;;;;4154:13:0;;;;;;;:7;:13;;;;;;;;4168:10;4154:25;;;;;;;:65;;;;4244:12;;;;;:8;:12;;;;;:24;;4261:6;4244:24;:16;:24;:::i;:::-;-1:-1:-1;;;;;4229:12:0;;;;;;;:8;:12;;;;;;;;;:39;;;;4283:26;;;;;;;4229:12;;4283:26;;;;;;;;;;;;;-1:-1:-1;4326:4:0;4000:337;;;;;:::o;911:21::-;;;;;;:::o;938:24::-;;;;:::o;2035:118::-;-1:-1:-1;;;;;2126:20:0;2095:12;2126:20;;;:8;:20;;;;;;;2035:118::o;609:186:4:-;674:8;;-1:-1:-1;;;;;674:8:4;660:10;:22;652:31;;;;;;725:8;;;718:5;;697:37;;-1:-1:-1;;;;;725:8:4;;;;718:5;;;;697:37;;;751:8;;;;743:16;;-1:-1:-1;;;;;;743:16:4;;;-1:-1:-1;;;;;751:8:4;;743:16;;;;768:21;;;609:186::o;237:20::-;;;-1:-1:-1;;;;;237:20:4;;:::o;861::0:-;;;;;;;;;;;;;;-1:-1:-1;;861:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2496:262;2611:10;2555:12;2602:20;;;:8;:20;;;;;;:32;;2627:6;2602:32;:24;:32;:::i;:::-;2588:10;2579:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;2659:12:0;;;;;;:24;;2676:6;2659:24;:16;:24;:::i;:::-;-1:-1:-1;;;;;2644:12:0;;;;;;:8;:12;;;;;;;;;:39;;;;2698:32;;;;;;;2644:12;;2707:10;;2698:32;;;;;;;;;;-1:-1:-1;2747:4:0;2496:262;;;;:::o;5123:331::-;5247:10;5215:12;5239:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;5239:28:0;;;;;;;;;;;:37;;;5291;;;;;;;5215:12;;5239:28;;5247:10;;5291:37;;;;;;;;5338:88;;-1:-1:-1;;;5338:88:0;;5386:10;5338:88;;;;;;;;;;;;5414:4;5338:88;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5338:47:0;;;;;5386:10;5398:6;;5414:4;5421;;5338:88;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;5338:88:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5338:88:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;5443:4:0;;5123:331;-1:-1:-1;;;;;;;5123:331:0:o;262:23:4:-;;;-1:-1:-1;;;;;262:23:4;;:::o;5931:182:0:-;6023:12;479:5:4;;-1:-1:-1;;;;;479:5:4;465:10;:19;457:28;;;;;;6092:5:0;;;6054:52;;;-1:-1:-1;;;6054:52:0;;-1:-1:-1;;;;;6092:5:0;;;6054:52;;;;;;;;;;;;:37;;;;;;:52;;;;;;;;;;;;;;;;;:37;:52;;;5:2:-1;;;;30:1;27;20:12;5:2;6054:52:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6054:52:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6054:52:0;;5931:182;-1:-1:-1;;;5931:182:0:o;4618:145::-;-1:-1:-1;;;;;4728:19:0;;;4695:14;4728:19;;;:7;:19;;;;;;;;:28;;;;;;;;;;;;;4618:145::o;507:98:4:-;479:5;;-1:-1:-1;;;;;479:5:4;465:10;:19;457:28;;;;;;579:8;:20;;-1:-1:-1;;;;;;579:20:4;-1:-1:-1;;;;;579:20:4;;;;;;;;;;507:98::o;356:114:5:-;408:6;440:1;435;:6;;427:15;;;;;;-1:-1:-1;457:5:5;;;356:114::o;236:::-;311:5;;;335:6;;;;327:15;;;;",
  "source": "pragma solidity >=0.5.16 <0.7.0;\r\n\r\nimport './ERC20.sol';\r\n\r\n// ----------------------------------------------------------------------------\r\n// Invest Fund Token, IFT\r\n// ----------------------------------------------------------------------------\r\n\r\ncontract IFT is FixedSupplyToken {\r\n  using SafeMath for uint;\r\n  // ------------------------------------------------------------------------\r\n  // Constructor\r\n  // ------------------------------------------------------------------------\r\n  constructor() public {\r\n      symbol = \"IFT\";\r\n      name = \"Invest Fund Token\";\r\n      decimals = 18;\r\n      _totalSupply = 1000000 * 10**uint(decimals); //1.000.000\r\n      balances[owner] = _totalSupply;\r\n      emit Transfer(address(0), owner, _totalSupply);\r\n  }\r\n}",
  "sourcePath": "C:/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/IFT.sol",
  "ast": {
    "absolutePath": "/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/IFT.sol",
    "exportedSymbols": {
      "IFT": [
        442
      ]
    },
    "id": 443,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 395,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".16",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 396,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 325,
        "src": "36:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 397,
              "name": "FixedSupplyToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 324,
              "src": "268:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FixedSupplyToken_$324",
                "typeString": "contract FixedSupplyToken"
              }
            },
            "id": 398,
            "nodeType": "InheritanceSpecifier",
            "src": "268:16:2"
          }
        ],
        "contractDependencies": [
          324,
          393,
          570
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 442,
        "linearizedBaseContracts": [
          442,
          324,
          570,
          393
        ],
        "name": "IFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 401,
            "libraryName": {
              "contractScope": null,
              "id": 399,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 667,
              "src": "296:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$667",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "290:24:2",
            "typeName": {
              "id": 400,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "309:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "515:244:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 404,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "524:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "494654",
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "533:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_356d1d581b46613463e4812928f65b083534ae5450ada83e5c3dce252e6ebfce",
                        "typeString": "literal_string \"IFT\""
                      },
                      "value": "IFT"
                    },
                    "src": "524:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "524:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 408,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "547:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "496e766573742046756e6420546f6b656e",
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "554:19:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_bff2a29d5c15d1dfcdf663b1321df813960e552fba3be864f30114bc046de7e1",
                        "typeString": "literal_string \"Invest Fund Token\""
                      },
                      "value": "Invest Fund Token"
                    },
                    "src": "547:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "547:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 412,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "582:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "593:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "582:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "582:13:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "604:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31303030303030",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "619:7:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "629:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "638:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "633:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "633:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "629:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "619:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "604:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "604:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "668:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 428,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "677:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "668:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 429,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "686:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "668:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "668:30:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "729:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "721:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "721:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "733:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "740:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 432,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "712:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "712:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "EmitStatement",
                  "src": "707:46:2"
                }
              ]
            },
            "documentation": null,
            "id": 441,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:2:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:0:2"
            },
            "scope": 442,
            "src": "494:265:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 443,
        "src": "252:510:2"
      }
    ],
    "src": "0:762:2"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/IFT.sol",
    "exportedSymbols": {
      "IFT": [
        442
      ]
    },
    "id": 443,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 395,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".16",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:2"
      },
      {
        "absolutePath": "/C/Users/LuisM/Desktop/temp/Jobs/project-tkn/contracts/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 396,
        "nodeType": "ImportDirective",
        "scope": 443,
        "sourceUnit": 325,
        "src": "36:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 397,
              "name": "FixedSupplyToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 324,
              "src": "268:16:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FixedSupplyToken_$324",
                "typeString": "contract FixedSupplyToken"
              }
            },
            "id": 398,
            "nodeType": "InheritanceSpecifier",
            "src": "268:16:2"
          }
        ],
        "contractDependencies": [
          324,
          393,
          570
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 442,
        "linearizedBaseContracts": [
          442,
          324,
          570,
          393
        ],
        "name": "IFT",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 401,
            "libraryName": {
              "contractScope": null,
              "id": 399,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 667,
              "src": "296:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$667",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "290:24:2",
            "typeName": {
              "id": 400,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "309:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 440,
              "nodeType": "Block",
              "src": "515:244:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 404,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "524:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "494654",
                      "id": 405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "533:5:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_356d1d581b46613463e4812928f65b083534ae5450ada83e5c3dce252e6ebfce",
                        "typeString": "literal_string \"IFT\""
                      },
                      "value": "IFT"
                    },
                    "src": "524:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 407,
                  "nodeType": "ExpressionStatement",
                  "src": "524:14:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 408,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "547:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "496e766573742046756e6420546f6b656e",
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "554:19:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_bff2a29d5c15d1dfcdf663b1321df813960e552fba3be864f30114bc046de7e1",
                        "typeString": "literal_string \"Invest Fund Token\""
                      },
                      "value": "Invest Fund Token"
                    },
                    "src": "547:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 411,
                  "nodeType": "ExpressionStatement",
                  "src": "547:26:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 412,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "582:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "593:2:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "582:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 415,
                  "nodeType": "ExpressionStatement",
                  "src": "582:13:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 416,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "604:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "31303030303030",
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "619:7:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000_by_1",
                          "typeString": "int_const 1000000"
                        },
                        "value": "1000000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "629:2:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "638:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "633:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "633:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "629:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "619:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "604:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "604:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 426,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 35,
                        "src": "668:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 428,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "677:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "668:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 429,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "686:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "668:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "668:30:2"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "729:1:2",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "721:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "721:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 436,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "733:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 437,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "740:12:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 432,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "712:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "712:41:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "EmitStatement",
                  "src": "707:46:2"
                }
              ]
            },
            "documentation": null,
            "id": 441,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:2:2"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "515:0:2"
            },
            "scope": 442,
            "src": "494:265:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 443,
        "src": "252:510:2"
      }
    ],
    "src": "0:762:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "tokenOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokens",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xE677B9A9564091a8E546C67C5CE07CCbc3398E66",
      "transactionHash": "0x8379d436e5d21d9e207c910fc430b0694933a4ccbbc60bdb9546219cef6fc0ba"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-11T15:50:45.411Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}